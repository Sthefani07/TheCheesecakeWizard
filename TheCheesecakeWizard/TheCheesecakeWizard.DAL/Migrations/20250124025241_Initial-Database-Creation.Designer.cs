// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheCheesecakeWizard.DAL;

#nullable disable

namespace TheCheesecakeWizard.DAL.Migrations
{
    [DbContext(typeof(TheCheesecakeWizardDbContext))]
    [Migration("20250124025241_Initial-Database-Creation")]
    partial class InitialDatabaseCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.Cheesecake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cheesecakes");
                });

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.CheesecakeIngredient", b =>
                {
                    b.Property<int>("CheesecakeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("CheesecakeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("CheesecakeIngredient");
                });

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.CheesecakeIngredient", b =>
                {
                    b.HasOne("TheCheesecakeWizard.DAL.Repository.Entities.Cheesecake", "Cheesecake")
                        .WithMany("CheesecakeIngredients")
                        .HasForeignKey("CheesecakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheCheesecakeWizard.DAL.Repository.Entities.Ingredient", "Ingredient")
                        .WithMany("CheesecakeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cheesecake");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.Cheesecake", b =>
                {
                    b.Navigation("CheesecakeIngredients");
                });

            modelBuilder.Entity("TheCheesecakeWizard.DAL.Repository.Entities.Ingredient", b =>
                {
                    b.Navigation("CheesecakeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
